- name: Ensure directories exist
  file: state=directory path={{ item }}
  with_items:
    - /etc/kubernetes/kubeconfigs
    - /etc/kubernetes/pki
    - /etc/systemd/system/docker.service.d
    - /etc/docker

- name: Add kubernetes repository
  yum_repository:
    name: Kubernetes
    description: Kubernetes
    file: kubernetes
    baseurl: http://yum.kubernetes.io/repos/kubernetes-el7-x86_64
    enabled: true
    gpgcakey: https://packages.cloud.google.com/yum/doc/yum-key.gpg
    gpgkey: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    gpgcheck: true
    state: present

- name: Add docker repository
  yum_repository:
    name: Docker
    description: Docker
    file: docker
    baseurl: https://download.docker.com/linux/centos/7/x86_64/stable
    enabled: true
    gpgkey: https://download.docker.com/linux/centos/gpg
    gpgcheck: true
    state: present

# install docker-selinux package separately to avoid obsoletion errors from newer docker releases
- name: Remove container-selinux
  yum:
    name: container-selinux
    state: absent

- name: Install docker selinux package # need to avoid installing obsolete packages
  environment: "{{ proxy_env }}"
  shell: "yum -y --setopt=obsoletes=0 install docker-ce-selinux-{{ docker_version }}"
  tags:
    - skip_ansible_lint

- name: Install required packages
  environment: "{{ proxy_env }}"
  yum: name={{ item }} state=present
  with_items:
    - "docker-ce-{{ docker_version }}"
    - "socat"

- name: Docker proxy settings
  template: src=templates/docker-proxy.conf.j2 dest=/etc/systemd/system/docker.service.d/proxy.conf
  when: nais_http_proxy is defined

# Check if sensu-core exist
- name: Check if sensu core is installed
  command: rpm -q sensu
  ignore_errors: yes
  register: sensu_rpm_check
  tags:
    - skip_ansible_lint

# Check if puppet-agent exist
- name: Check if puppet is installed
  command: rpm -q puppet
  ignore_errors: yes
  register: puppet_agent_rpm_check
  tags:
    - skip_ansible_lint

- name: Disable puppet agent
  command: /bin/puppet agent --disable
  ignore_errors: yes
  when: puppet_agent_rpm_check.rc == 0

- name: Disable puppet agent (preprod)
  command: /opt/puppet/bin/puppet agent --disable
  ignore_errors: yes
  when: puppet_agent_rpm_check.rc == 0
