apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: kube-controller-manager
    tier: control-plane
  name: kube-controller-manager
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-controller-manager
    - --kubeconfig=/etc/kubernetes/controller-manager.conf
    - --root-ca-file=/etc/kubernetes/pki/ca.pem
    - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
    - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.pem
    - --address=127.0.0.1
    - --insecure-experimental-approve-all-kubelet-csrs-for-group=system:bootstrappers
    - --controllers=*,bootstrapsigner,tokencleaner
    - --cluster-signing-key-file=/etc/kubernetes/pki/ca-key.pem
    - --leader-elect=true
    - --use-service-account-credentials=true
    env:
    - name: http_proxy
      value: http://webproxy-utvikler.nav.no:8088
    - name: https_proxy
      value: http://webproxy-utvikler.nav.no:8088
    - name: HTTPS_PROXY
      value: http://webproxy-utvikler.nav.no:8088
    - name: no_proxy
      value: localhost,127.0.0.1,.local,.adeo.no,preprod.local,test.local,.nav.no,.devillo.no,.oera.no,oera-q.local,oera-t.local,{{ansible_default_ipv4.address}},10.254.0.1
    image: gcr.io/google_containers/kube-controller-manager-amd64:v1.6.3
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10252
        scheme: HTTP
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: kube-controller-manager
    resources:
      requests:
        cpu: 200m
    volumeMounts:
    - mountPath: /etc/kubernetes/
      name: k8s
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: certs
    - mountPath: /etc/pki
      name: pki
  hostNetwork: true
  volumes:
  - hostPath:
      path: /etc/kubernetes
    name: k8s
  - hostPath:
      path: /etc/ssl/certs
    name: certs
  - hostPath:
      path: /etc/pki
    name: pki
status: {}
